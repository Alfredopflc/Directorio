//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DirectorioTelefonico
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class directorio : DbContext
    {
        public directorio()
            : base("name=directorio")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Contacto> Contacto { get; set; }
        public virtual DbSet<Telefono> Telefono { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
    
        public virtual int AddUserr(string usuario, string password, string patron)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var patronParameter = patron != null ?
                new ObjectParameter("Patron", patron) :
                new ObjectParameter("Patron", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddUserr", usuarioParameter, passwordParameter, patronParameter);
        }
    
        public virtual ObjectResult<ValidarUser_Result> ValidarUser(string usuario, string password, string patron)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var patronParameter = patron != null ?
                new ObjectParameter("Patron", patron) :
                new ObjectParameter("Patron", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ValidarUser_Result>("ValidarUser", usuarioParameter, passwordParameter, patronParameter);
        }
    
        public virtual int contacto_crear(string nombre, string apellido, string telefono)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("contacto_crear", nombreParameter, apellidoParameter, telefonoParameter);
        }
    
        public virtual int contacto_delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("contacto_delete", idParameter);
        }
    
        public virtual int contacto_update(Nullable<int> id, string nombre, string apellido, string telefono)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("contacto_update", idParameter, nombreParameter, apellidoParameter, telefonoParameter);
        }
    
        public virtual ObjectResult<contactoload_Result> contactoload()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<contactoload_Result>("contactoload");
        }
    
        public virtual ObjectResult<contacto_read_Result> contacto_read()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<contacto_read_Result>("contacto_read");
        }
    
        public virtual ObjectResult<contactoread_Result> contactoread(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<contactoread_Result>("contactoread", idParameter);
        }
    }
}
